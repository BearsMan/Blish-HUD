<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Setting_StayInTray_Description" xml:space="preserve">
    <value>Aktiviert, wird Blish HUD beim Schließen von GW2 automatisch minimiert und läuft weiter, bis GW2 erneut gestartet wird.
Sie können auch das Symbol für Blish HUD in der Taskleiste verwenden, um Guild Wars 2 zu starten.</value>
  </data>
  <data name="AboutLoveMessage" xml:space="preserve">
    <value>Entwickelt und gebaut mit all der Liebe in Tyria von
dem Blish HUD-Team mit Hilfe von vielen anderen!</value>
  </data>
  <data name="HomeTab" xml:space="preserve">
    <value>Startseite</value>
  </data>
  <data name="AboutSection" xml:space="preserve">
    <value>Über</value>
  </data>
  <data name="Setting_AppCulture_DisplayName" xml:space="preserve">
    <value>App &amp; API-Sprache</value>
  </data>
  <data name="Setting_AppCulture_Description" xml:space="preserve">
    <value>Legt die Sprache fest, die bei der Anzeige von Blish-HUD-Text und bei Anfragen an die GW2-Web-API verwendet wird.</value>
  </data>
  <data name="Setting_StayInTray_DisplayName" xml:space="preserve">
    <value>In die Symbolleiste minimieren, wenn Guild Wars 2 geschlossen wird.</value>
  </data>
  <data name="Setting_ShowInTaskbar_DisplayName" xml:space="preserve">
    <value>In Taskleiste anzeigen</value>
  </data>
  <data name="OverlaySettingsSection" xml:space="preserve">
    <value>Overlay-Einstellungen</value>
  </data>
  <data name="Setting_ShowInTaskbar_Description" xml:space="preserve">
    <value>Aktiviert, wird Blish HUD in der Taskleiste angezeigt während es läuft.</value>
  </data>
  <data name="AboutAnetNotice" xml:space="preserve">
    <value>©2010-{0} ArenaNet, LLC. Alle Rechte vorbehalten. NCSOFT, das ineinandergreifende NC-Logo,
ArenaNet, Guild Wars, Guild Wars Factions, Guild Wars Nightfall, Guild Wars: Eye of the North,
Guild Wars 2, Heart of Thorns und alle zugehörigen Logos und Designs sind Warenzeichen oder
eingetragene Warenzeichen der NCSOFT Corporation. Alle anderen Warenzeichen sind das Eigentum
ihrer jeweiligen Besitzer.</value>
  </data>
  <data name="Setting_AudioDevice_Description" xml:space="preserve">
    <value>Bestimmt das Audioausgabegerät welches von Blish HUD verwendet wird. Das Ausgabegerät passt sich an das gewählte Audiogerät von GW2 an.</value>
  </data>
  <data name="Setting_AudioDevice_DisplayName" xml:space="preserve">
    <value>Audiogerät</value>
  </data>
  <data name="Setting_UseGameVolume_Description" xml:space="preserve">
    <value>Wenn aktiviert, wird Blish HUD seine Lautstärke an die des Spiels anpassen.</value>
  </data>
  <data name="Setting_UseGameVolume_DisplayName" xml:space="preserve">
    <value>Spiellautstärke verwenden</value>
  </data>
  <data name="Setting_Volume_Description" xml:space="preserve">
    <value>Bestimmt die Lautstärke von Blish HUD. Wirkt sich nur aus, wenn 'Spiellautstärke verwenden' deaktiviert ist.</value>
  </data>
  <data name="Setting_Volume_DisplayName" xml:space="preserve">
    <value>Lautstärke</value>
  </data>
</root>